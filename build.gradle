plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.epages.restdocs-api-spec' version '0.11.3'
}

ext {
    set('statics', file('src/main/resources/static'))
}

group = 'io.shirohoo.docs'
archivesBaseName = 'spring-rest-docs'
version = '0.0.1'
sourceCompatibility = '11'

jar {
    enabled = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    annotationProcessor(
            'org.springframework.boot:spring-boot-configuration-processor',
            'org.projectlombok:lombok'
    )
    implementation(
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-webflux',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-validation',
            'org.modelmapper:modelmapper:2.4.4'
    )
    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'org.springframework.restdocs:spring-restdocs-webtestclient',
            'com.epages:restdocs-api-spec-webtestclient:0.11.3'
    )
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "junit", module: "junit"
    }
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled false
        csv.enabled false

        html.destination file("$statics/coverage")
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/model/**',
                    '**/*Application.*',
                    '**/Q*.class',
                    '**/test/**',
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true

            element = 'CLASS'

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 250
            }
            excludes = [
                    '**/model/**',
                    'Q*.class',
                    '**/test/**',
            ]
        }
    }
}

task testCoverage(type: Test) {
    group 'verification'
    description 'Runs the unit tests with coverage'

    dependsOn(
            ':jacocoTestReport',
            ':jacocoTestCoverageVerification'
    )

    tasks['jacocoTestCoverageVerification'].mustRunAfter(tasks['jacocoTestReport'])
}

bootJar {
    dependsOn(
            ':openapi3',
            ':testCoverage'
    )
}

openapi3 {
    server = 'http://localhost:8080'
    title = 'Spring-Rest-Docs + Swagger-UI + Open-API-3.0.1'
    description 'Spring-Rest-Docs의 장점과 Swagger의 장점을 모두 가져갈 수 있는 아키텍처를 구축한다'
    version = '0.0.1'
    outputFileNamePrefix = 'open-api-3.0.1'
    format = 'json'
    outputDirectory = "$statics/docs"
}
